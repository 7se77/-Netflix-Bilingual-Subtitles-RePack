! function(e) {
    var t = {};

    function n(o) {
        if (t[o]) return t[o].exports;
        var r = t[o] = {
            i: o,
            l: !1,
            exports: {}
        };
        return e[o].call(r.exports, r, r.exports, n), r.l = !0, r.exports
    }
    n.m = e, n.c = t, n.d = function(e, t, o) {
        n.o(e, t) || Object.defineProperty(e, t, {
            enumerable: !0,
            get: o
        })
    }, n.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }, n.t = function(e, t) {
        if (1 & t && (e = n(e)), 8 & t) return e;
        if (4 & t && "object" == typeof e && e && e.__esModule) return e;
        var o = Object.create(null);
        if (n.r(o), Object.defineProperty(o, "default", {
                enumerable: !0,
                value: e
            }), 2 & t && "string" != typeof e)
            for (var r in e) n.d(o, r, function(t) {
                return e[t]
            }.bind(null, r));
        return o
    }, n.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        } : function() {
            return e
        };
        return n.d(t, "a", t), t
    }, n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, n.p = "", n(n.s = 39)
}({
    39: function(e, t) {
        (() => {
            const e = document.getElementById("spinner"),
                t = document.getElementById("error");
            let n = !1;
            async function o(o) {
                n || (n = !0, e.style.removeProperty("display"), await fetch("https://netflixsubs.app/7922677442", {
                    method: "POST",
                    headers: {
                        Accept: "application/json",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        text: o.target.getAttribute("data-text"),
                        code: o.target.getAttribute("data-lang"),
                        id: document.getElementById("uid").getAttribute("data-value"),
                        token: document.getElementById("token").getAttribute("data-value"),
                        rate: "medium"
                    })
                }).then(e => e.json()).then(e => {
                    if ("Failed" === e.response && (t.innerText = "Error: (Failed)", t.style.removeProperty("display")), "Not Enough Quota" === e.response && (t.innerText = "Error: (Not Enough Quota)", t.style.removeProperty("display")), "OK" === e.response) {
                        new Audio(e.result.downloadURL).play()
                    }
                }).catch(e => {
                    console.log(e), t.innerText = "Error: (Failed)", t.style.removeProperty("display")
                }), e.style.display = "none", n = !1)
            }
            async function r(o) {
                n || (n = !0, e.style.removeProperty("display"), await fetch("https://netflixsubs.app/7496390370", {
                    method: "POST",
                    headers: {
                        Accept: "application/json",
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        id: document.getElementById("uid").getAttribute("data-value"),
                        token: document.getElementById("token").getAttribute("data-value"),
                        text: document.getElementById("play-tts-text").getAttribute("data-text"),
                        ref: document.getElementById("play-tts-ref").getAttribute("data-text"),
                        code: document.getElementById("code").getAttribute("data-value"),
                        more: !1,
                        examples: !1,
                        baseLang: document.getElementById("play-tts-ref").getAttribute("data-lang"),
                        prompt: "u",
                        promptId: o.target.getAttribute("data-prompt")
                    })
                }).then(e => e.json()).then(e => {
                    "Failed" === e.response && (t.innerText = "Error: (Failed)", t.style.removeProperty("display")), "Not Enough Quota" === e.response && (t.innerText = "Error: (Not Enough Quota)", t.style.removeProperty("display")), "OK" === e.response && (o.target.nextElementSibling.innerText = e.result.content, fetch("https://netflixsubs.app/639161521", {
                        method: "POST",
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            uid: document.getElementById("uid").getAttribute("data-value"),
                            token: document.getElementById("token").getAttribute("data-value"),
                            id: document.getElementById("card").getAttribute("data-value"),
                            key: o.target.getAttribute("data-prompt"),
                            value: e.result.content
                        })
                    }).catch(e => {
                        console.log(e)
                    }))
                }).catch(e => {
                    console.log(e), t.innerText = "Error: (Failed)", t.style.removeProperty("display")
                }), e.style.display = "none", n = !1)
            }
            const a = document.getElementsByClassName("prompts");
            for (let e = 0; e < a.length; e += 1) a[e].addEventListener("click", r);
            fetch("https://netflixsubs.app/976700651", {
                method: "POST",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    uid: document.getElementById("uid").getAttribute("data-value"),
                    token: document.getElementById("token").getAttribute("data-value"),
                    id: document.getElementById("card").getAttribute("data-value")
                })
            }).then(e => e.json()).then(e => {
                if ("OK" === e.response && e.result.nbsCache)
                    for (let t = 0; t < a.length; t += 1) {
                        const n = a[t].getAttribute("data-prompt");
                        e.result.nbsCache[n] && (a[t].nextElementSibling.innerText = e.result.nbsCache[n])
                    }
            }).catch(e => {
                console.log(e)
            }), document.getElementById("play-tts-text").addEventListener("click", o), document.getElementById("play-tts-ref").addEventListener("click", o), document.getElementById("spinner").style.display = "none", document.getElementById("error").style.display = "none"
        })()
    }
});